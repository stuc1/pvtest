name: r5s-fuse-test

on:
  watch:
    types: [started]
  push:
    branches: [ r5s-fuse-test ]
  schedule:
    - cron: '10 09 * * *'

jobs:

  build:

    runs-on: self-hosted

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: r5s-fuse-test

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: . 1_initialization_environment.sh

      - name: Clone Source
        run: . 2_clone_source.sh master-v22.03 rk3568

      - name: Mods
        run: |
          cd friendlywrt-rk3568
          #. ../remove_unused_config.sh
          ##cat configs/config_rk3328 | grep "TARGET" >> ../base_rk3328.seed
          ##cat ../app_config.seed >> ../base_rk3328.seed
          ##cat ../base_rk3328.seed > configs/config_rk3328
          cd friendlywrt
          #git remote add upstream https://github.com/coolsnowwolf/lede && git fetch upstream
          #git checkout upstream/master -b tmp
          #git checkout 12673022490bfe7a25c92ff0bd1db72f4b01de92 -- target/linux/rockchip/armv8/base-files/root/setup.sh
          #git add . && git commit -m 'prepare'
          #git checkout master-v22.03
          #git rebase db3d7e8fd3a85afbcc7dd945f86950ab735c7e81^ --onto tmp -X theirs
          ##. ../../3_prepare_packages.sh
          #. ../../5_mods.sh

      - name: Build FriendlyWrt
        run: . 4_build_image.sh friendlywrt-rk3568 nanopi_r5s.mk

      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          . x_assemble_artifact.sh
          release_tag="r5s-Lean-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip

      - name: Error notification
        if: ${{ failure() }}
        run: curl -k --data chat_id="${{secrets.TELEGRAM_CHAT_ID}}" --data "text= Errors occured in building $GITHUB_ACTION" "https://api.telegram.org/bot${{secrets.TELEGRAM_BOT_TOKEN}}/sendMessage"