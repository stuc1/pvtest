# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *
  workflow_dispatch:
    inputs:
      device:
        description: 'Device to build (e.g., r4s, r2s, x86, etc.)'
        required: true
        default: 'r4s'
        type: choice
        options:
          - r4s
          - r4se
          - r2s
          - r2c
          - r1s
          - r1s-h3
          - r1p
          - r1p-lts
          - r5s
          - r5c
          - r6s
          - r6c
          - x86
          - d2
          - e20c
          - e25

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout config repository
        uses: actions/checkout@v4
        with:
          path: config

      - name: Clone OpenWrt source
        run: |
          git clone --depth 1 https://github.com/coolsnowwolf/lede.git openwrt
          cd openwrt

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Update feeds
        run: |
          cd openwrt
          echo "src-git helloworld https://github.com/stupidloud/helloworld" >> ./feeds.conf.default
          ./scripts/feeds update -a
          # Remove default mosdns packages to avoid conflicts with helloworld source
          rm -rf feeds/packages/net/mosdns package/feeds/packages/mosdns
          rm -rf feeds/luci/applications/luci-app-mosdns package/feeds/luci/luci-app-mosdns
          ./scripts/feeds install -a

      - name: Apply device configuration
        run: |
          cd openwrt
          if [ "${{ github.event.inputs.device }}" != "" ]; then
            echo "Using device configuration: ${{ github.event.inputs.device }}"
            if [ -f "../config/${{ github.event.inputs.device }}.config.seed" ]; then
              head -3 "../config/${{ github.event.inputs.device }}.config.seed" > .config
              echo "Applied first 3 lines from ${{ github.event.inputs.device }}.config.seed:"
              cat .config
            else
              echo "Configuration file ${{ github.event.inputs.device }}.config.seed not found"
              exit 1
            fi
          else
            echo "No device specified, using default configuration"
          fi

      - name: Generate configuration file
        run: |
          cd openwrt
          make defconfig

      - name: Download packages
        run: |
          cd openwrt
          make download -j4

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./openwrt/artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./openwrt/artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/